"""3

Revision ID: f38543668413
Revises: b6d495efc3ed
Create Date: 2023-09-16 10:14:53.237033

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f38543668413'
down_revision: Union[str, None] = 'b6d495efc3ed'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Tg_User',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=25), nullable=False),
    sa.Column('last_name', sa.String(length=25), nullable=True),
    sa.Column('username', sa.String(length=25), nullable=False),
    sa.Column('telegram_id', sa.Integer(), nullable=True),
    sa.Column('phone_number', sa.Integer(), nullable=True),
    sa.Column('is_premium', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('telegram_id')
    )
    op.create_index(op.f('ix_Tg_User_id'), 'Tg_User', ['id'], unique=True)
    op.drop_index('ix_User_id', table_name='User')
    op.drop_table('User')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('User',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"User_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=25), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=25), autoincrement=False, nullable=True),
    sa.Column('username', sa.VARCHAR(length=25), autoincrement=False, nullable=False),
    sa.Column('telegram_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('language_code', sa.VARCHAR(length=5), autoincrement=False, nullable=False),
    sa.Column('is_premium', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='User_pkey'),
    sa.UniqueConstraint('telegram_id', name='User_telegram_id_key')
    )
    op.create_index('ix_User_id', 'User', ['id'], unique=False)
    op.drop_index(op.f('ix_Tg_User_id'), table_name='Tg_User')
    op.drop_table('Tg_User')
    # ### end Alembic commands ###
